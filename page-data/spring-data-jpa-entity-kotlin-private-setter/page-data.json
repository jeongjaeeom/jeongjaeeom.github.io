{"componentChunkName":"component---src-templates-post-jsx","path":"/spring-data-jpa-entity-kotlin-private-setter/","result":{"data":{"site":{"siteMetadata":{"title":"jeongjae's.blog"}},"markdownRemark":{"id":"faff82ef-b7a2-55ce-86de-406f5ae54be6","excerpt":"문제상황 아래 코드는 “Private setters are not allowed for open properties” 컴파일 오류가 발생한다. 원인 JPA를 사용하려면 allopen 플러그인을 사용해야하는데, allopen 플러그인으로 인해 모든 속성 및 메서드가 스프링 구성 요소에서 오픈된다. 그래서 오픈된 속성은 private setter를 만들 수 …","html":"<h2>문제상황</h2>\n<p>아래 코드는 “Private setters are not allowed for open properties” 컴파일 오류가 발생한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token annotation builtin\">@Entity</span>\n<span class=\"token keyword\">class</span> <span class=\"token function\">Product</span><span class=\"token punctuation\">(</span>\n    <span class=\"token annotation builtin\">@Id</span> <span class=\"token annotation builtin\">@Column</span><span class=\"token punctuation\">(</span>columnDefinition <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"BINARY(16)\"</span></span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">val</span> id<span class=\"token operator\">:</span> UUID<span class=\"token punctuation\">,</span>\n    <span class=\"token annotation builtin\">@Embedded</span> <span class=\"token keyword\">val</span> name<span class=\"token operator\">:</span> DisplayedName<span class=\"token punctuation\">,</span>\n    price<span class=\"token operator\">:</span> Price <span class=\"token operator\">=</span> Price<span class=\"token punctuation\">.</span>ZERO\n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token annotation builtin\">@Embedded</span>\n    <span class=\"token keyword\">var</span> price<span class=\"token operator\">:</span> Price <span class=\"token operator\">=</span> price\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">set</span>  <span class=\"token comment\">// private 컴파일오류!</span>\n\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span>name<span class=\"token operator\">:</span> DisplayedName<span class=\"token punctuation\">,</span> price<span class=\"token operator\">:</span> Long<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">(</span>IdGenerator<span class=\"token punctuation\">.</span><span class=\"token function\">createId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> <span class=\"token function\">Price</span><span class=\"token punctuation\">(</span>price<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">fun</span> <span class=\"token function\">changePrice</span><span class=\"token punctuation\">(</span>price<span class=\"token operator\">:</span> Price<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>price <span class=\"token operator\">=</span> price\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>원인</h2>\n<p>JPA를 사용하려면 allopen 플러그인을 사용해야하는데, allopen 플러그인으로 인해 모든 속성 및 메서드가 스프링 구성 요소에서 오픈된다.<br>\n그래서 오픈된 속성은 private setter를 만들 수 없다.</p>\n<h2>해결책</h2>\n<p>JPA를 사용하면 기본생성자도 private으로 선언할 수 없는데 수정자도 마찬가지다\nprivate → protected 로 변경하면 컴파일 오류는 발생하지 않는다.</p>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token annotation builtin\">@Entity</span>\n<span class=\"token keyword\">class</span> <span class=\"token function\">Product</span><span class=\"token punctuation\">(</span>\n    <span class=\"token annotation builtin\">@Id</span> <span class=\"token annotation builtin\">@Column</span><span class=\"token punctuation\">(</span>columnDefinition <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"BINARY(16)\"</span></span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">val</span> id<span class=\"token operator\">:</span> UUID<span class=\"token punctuation\">,</span>\n    <span class=\"token annotation builtin\">@Embedded</span> <span class=\"token keyword\">val</span> name<span class=\"token operator\">:</span> DisplayedName<span class=\"token punctuation\">,</span>\n    price<span class=\"token operator\">:</span> Price <span class=\"token operator\">=</span> Price<span class=\"token punctuation\">.</span>ZERO\n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token annotation builtin\">@Embedded</span>\n    <span class=\"token keyword\">var</span> price<span class=\"token operator\">:</span> Price <span class=\"token operator\">=</span> price\n        <span class=\"token keyword\">protected</span> <span class=\"token keyword\">set</span>\n\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span>name<span class=\"token operator\">:</span> DisplayedName<span class=\"token punctuation\">,</span> price<span class=\"token operator\">:</span> Long<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">(</span>IdGenerator<span class=\"token punctuation\">.</span><span class=\"token function\">createId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> <span class=\"token function\">Price</span><span class=\"token punctuation\">(</span>price<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">fun</span> <span class=\"token function\">changePrice</span><span class=\"token punctuation\">(</span>price<span class=\"token operator\">:</span> Price<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>price <span class=\"token operator\">=</span> price\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>참고</h2>\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/45153998/what-is-an-open-property-why-i-cant-make-its-setter-to-private\">https://stackoverflow.com/questions/45153998/what-is-an-open-property-why-i-cant-make-its-setter-to-private</a></li>\n</ul>","frontmatter":{"title":"Kotlin에서 JPA Entity 멤버변수 private set 사용 시 주의사항","date":"October 26, 2022","update":null,"tags":["kotlin","spring data","JPA","spring"],"series":null},"fields":{"slug":"/spring-data-jpa-entity-kotlin-private-setter/","readingTime":{"minutes":1.295}}},"seriesList":{"edges":[{"node":{"id":"99508f11-35e0-5f0d-a79c-dbee96ebed35","fields":{"slug":"/pinpoint-install/"},"frontmatter":{"title":"AWS EC2 Pinpoint 설치"}}},{"node":{"id":"7e3fa059-60fc-5ae7-bc0a-566ddc914e70","fields":{"slug":"/pinpoint-install-with-docker/"},"frontmatter":{"title":"AWS EC2 Pinpoint 설치 with docker"}}},{"node":{"id":"4f03a198-05fe-5536-9449-d9afd51f0240","fields":{"slug":"/git-mirror/"},"frontmatter":{"title":"Git 저장소 복제 하기"}}},{"node":{"id":"d84df2cc-64cf-5fa0-9a2f-6f60a8e87e38","fields":{"slug":"/linux-basic-terminal-settings/"},"frontmatter":{"title":"리눅스 서버 터미널 기본 설정"}}},{"node":{"id":"abc61d39-be7d-56c6-99cc-198e11301247","fields":{"slug":"/kotlin-spring-woowahan-tech/"},"frontmatter":{"title":"우아한테크세미나 코프링 정리"}}},{"node":{"id":"faff82ef-b7a2-55ce-86de-406f5ae54be6","fields":{"slug":"/spring-data-jpa-entity-kotlin-private-setter/"},"frontmatter":{"title":"Kotlin에서 JPA Entity 멤버변수 private set 사용 시 주의사항"}}},{"node":{"id":"f7994097-ad82-5849-98ec-072a86d3e3f0","fields":{"slug":"/k6/"},"frontmatter":{"title":"k6로 부하테스트 시작하기"}}}]},"previous":{"fields":{"slug":"/1-2-big-picture-computer-system/"},"frontmatter":{"title":"혼자 공부하는 컴퓨터구조+운영체제(1-2) - 컴퓨터 구조의 큰 그림"}},"next":{"fields":{"slug":"/k6/"},"frontmatter":{"title":"k6로 부하테스트 시작하기"}}},"pageContext":{"id":"faff82ef-b7a2-55ce-86de-406f5ae54be6","series":null,"previousPostId":"bb02a72c-32ca-5e98-80cf-1ed87a4811c3","nextPostId":"f7994097-ad82-5849-98ec-072a86d3e3f0"}},"staticQueryHashes":[]}