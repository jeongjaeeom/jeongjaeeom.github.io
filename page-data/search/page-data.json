{"componentChunkName":"component---src-pages-search-jsx","path":"/search/","result":{"data":{"allMarkdownRemark":{"nodes":[{"excerpt":"","fields":{"slug":"/docker/"},"frontmatter":{"date":"June 13, 2022","title":"Docker 시작하기","tags":["docker","kubernetes","k8s","container"]},"rawMarkdownBody":"\n"},{"excerpt":"3장 함수 작게 만들어라! 함수를 만드는 첫째 규칙은'작게!'다. 함수를 만드는 둘째 규칙은 '더 작게!'다 함수에서 들여쓰기 수준은 1단이나 2단을 넘어서면 안 된다. 당연한 말이지만, 그래야 함수는 읽고 이해하기 쉬워진다. 한 가지만 해라! 함수는 한 가지를 해야한다. 그 한가지를 잘 해야한다. 그 한 가지만을 해야 한다. 의미 있는 이름으로 다른 함…","fields":{"slug":"/clean-code/"},"frontmatter":{"date":"June 13, 2022","title":"[Clean Code] 3장 함수","tags":["clean-code","Clean Code","function","container"]},"rawMarkdownBody":"# 3장 함수\n\n## 작게 만들어라!\n\n* 함수를 만드는 첫째 규칙은'작게!'다. 함수를 만드는 둘째 규칙은 '더 작게!'다\n* 함수에서 들여쓰기 수준은 1단이나 2단을 넘어서면 안 된다. 당연한 말이지만, 그래야 함수는 읽고 이해하기 쉬워진다.\n\n## 한 가지만 해라!\n\n* 함수는 한 가지를 해야한다. 그 한가지를 잘 해야한다. 그 한 가지만을 해야 한다.\n* 의미 있는 이름으로 다른 함수를 추출할 수 있다면 그 함수는 여러 작업을 하는 셈이다.\n\n## 함수당 추상화 수준은 하나로!\n\n* 함수가 확실히 '한 가지' 작업만 하려면 함수 내 모든 문자의 추상화 수준이 동일해야 한다.\n* 위 에서 아래로 프로그램을 읽으면 함수 추상화 수준이 한 번에 한 단계씩 낮아진다. 나는 이것을 `내려가기 규칙`이라 부른다.\n\n## 서술적인 이름을 사용하라!\n\n* 좋은 이름이 주는 가치는 아무리 강조해도 지나치치 않다.\n* 한 가지만 하는 작은 함수에 좋은 이름을 붙인다면 이런 원칙을 달성함에 있어 이미 절반은 성공했다.\n\n## 함수 인수\n\n* 함수에서 이상적인 인수 개수는 0개(무항)다. 다음은 1개(단항)고, 다음은 2개(이항)다 3개(삼항)는 가능한 피하는 편이 좋다. 4개 이상(다항)은 특별한 이유가 필요하다.\n  특별한 이유가 있어도 사용하면 안된다.\n* 변환 함수에서 출력 인수를 사용하면 혼란을 일으킨다.\n* 플래그 인수는 추하다. 함수가 한꺼번에 여러가지를 처리한다고 대놓고 공표하는 셈이니까!\n* 인수가 2-3개 필요하다면 일부를 독자적인 클래스 변수로 선언할 가능성을 짚어본다.\n* 단항 함수는 함수와 인수가 동사/명사 쌍을 이뤄야 한다.\n\n## 부수 효과를 일으키지 마라!\n\n* 부수 효과는 거짓말이다. 함수에서 한 가지를 하겠다고 약속하고선 남모래 다른 짓도 하니까.\n* 일반적으로 출력 인수는 피해야 한다. 함수에서 상태를 변경해야 한다면 함수가 속한 객체 상태를 변경하는 방식을 택한다.\n\n## 명령과 조회를 분리하라!\n\n```java\n// \"set\"이라는 단어가 동사인지 형용사인지 분간하기 어렵다.\n// 함수를 구현한 개발자는 \"set\"을 동사로 의도했다. 하지만 if 문에 넣고 보면 형용사로 느껴진다.  \n// 그래서 if 문은 \"username 속성이 unclebob으로 설정되 어 있다면...”으로 읽힌다.  \n// \"username을 unclebob으로 설정하는데 성공하면\"으로 읽히지 않는다.\nif(set(\"username\",\"unclebob\"))...\n```\n\n```java\nif(attributeExists(\"username\")){\n    setAttribute(\"username\",\"unclebob\"); // 명령과 조회를 분리하라!\n    }\n```\n\n## 오류 코드보다 예외를 사용하라!\n\n* 명령 함수에서 오류 코드를 반환하는 방식은 명령/조회 분리 규칙을 미묘하게 위반한다.\n* 오류 코드 대신 예외를 사용하면 오류 처리 코드가 원래 코드에서 분리되므로 코드가 깔끔해진다.\n\n## try/catch 블록은 원래추하다.\n\n* 코드 구조에 혼란을 일으키며, 정상 동작과 오류 처리 동작을 뒤섞는다. 그러므로 try/catch 블록을 별도 함수로 뽑아내는 편이 좋다.\n\n## 오류 처리도 한 가지 작업이다.\n\n* 함수는 '한 가지' 작업만 해야 한다. 오류 처리도 '한 가지' 작업에 속한다. 그러므로 오류를 처리하는 함수는 오류만 처리해야 마땅하다.\n\n## 반복하지 마라!\n\n* 중복은 소프트웨어에서 모든 악의 근원이다.\n\n## 함수를 어떻게 짜죠?\n\n* 소프트웨어를 짜는 행위는 여느 글짓기와 비슷하다.\n* 처음부터 탁 짜내지 않는다. 그게 가능한 사람은 없으리라.\n\n## 결론\n\n* 프로그래밍의 기술은 언제나 언어 설계의 기술이다.\n* 대가 프로그래머는 시스템을 (구현할) 프로그램이 아니라 (풀어갈) 이야기로 여긴다. 프로그래밍 언어라는 수단을 사용해 좀 더 풍부하고 좀 더 표현력이 강한 언어를 만들어\n  이야기를 풀어간다.\n* 함수 계층이 바로 그 언어에 속한다.\n"},{"excerpt":"How to change the favicon? The favicon is located in . If you replace that image, the favicon will change. If you want to change the name of the favicon, change the  property of  in . Utterance is no…","fields":{"slug":"/other-tips/"},"frontmatter":{"date":"May 04, 2021","title":"🤩 4. Other Tips","tags":["hoodie","other-tips"]},"rawMarkdownBody":"\n## How to change the favicon?\n\nThe favicon is located in `static/favicon.png`. If you replace that image, the favicon will change.\n\nIf you want to change the name of the favicon, change the `icon` property of `gatsby-plugin-manifest` in `gatsby-config.js`.\n\n## Utterance is not working properly.\n\nIn the http environment, utterance may not work properly. Host your blog with https.\n\n## How to set OG Image?\n\nReplace the `og-image.png` file in the `/static` directory with your own image file.\n\n## Do you have another question?\n\nPlease comment on this article or [open an issue](https://github.com/devHudi/gatsby-starter-hoodie/issues) in the gatsby-starter-hoodie repository. Your participation advances gatsby-starter-hoodie. Thank you 😎.\n"},{"excerpt":"1. Add a post You can add posts by creating a new markdown document in the  path. 1-1. Post file structure There are two ways to add a new document. The first is to create a markdown file for a singl…","fields":{"slug":"/writing-guide/"},"frontmatter":{"date":"May 03, 2021","title":"🤔 3. Writing Guide","tags":["hoodie","writing-guide"]},"rawMarkdownBody":"\n## 1. Add a post\n\nYou can add posts by creating a new markdown document in the `contents/post` path.\n\n### 1-1. Post file structure\n\nThere are two ways to add a new document. The first is to create a markdown file for a single document without a directory. If you are writing about JavaScript, you can create a `about-javascript.md` file in the `contents/posts` directory.\n\nThe second is to create a directory and create an `index.md` file in it. This method is useful when the document contains several additional files such as picture files.\n\nEach file name or directory name becomes a unique address of the document and can be accessed as follows. `https://siteURL/about-javascript`.\n\n### 1-2. Frontmatter\n\nThe Markdown document you create contains the document's metadata called frontmatter.\n\n```\n---\ntitle: \"🤔 3. Writing Guide\"\ndescription: \"How to write and add a post?\"\ndate: 2021-05-03\nupdate: 2021-05-03\ntags:\n  - hoodie\n  - writing-guide\nseries: \"Getting started your blog with gatsby-starter-hoodie\"\n---\n```\n\nAbove is the frontmatter of the document you are currently reading. Among them, title and date are required. It is recommended to enclose the string with spaces in quotation marks.\n\n### 1-3. Writing markdown\n\nIf you have written a Frontmatter, you can write your markdown document under it. gatsby-starter-hoodie supports most Markdown syntax. To learn more about Markdown syntax, see the [Mastering Markdown](https://guides.github.com/features/mastering-markdown/) documentation on GitHub.\n\n## 2. Syntax Highlighting & Katex\n\n### 2-1. Syntax Highlighting\n\nSyntax highlighting based on Prism.JS is supported.\n\n#### Examples\n\nJavascript\n\n```javascript\nconsole.log(\"Hello, world!\")\n```\n\nPython\n\n```python\nprint(\"Hello, world!\")\n```\n\nIt supports a wider variety of other languages. Check it out on the [Prism.js website](https://prismjs.com/).\n\n### 2-2. Katex\n\nIt supports Katex syntax, you can easily express complex formulas.\n\n#### Inline mode\n\n$$E = m c^{2}$$\n\n#### Block mode\n\n$$\n\\int_{0}^{\\infty} f(x) dx\n$$\n\n## 3. Add images to a post\n\nYou can easily embed images using relative paths. It is easy to manage documents containing images by creating a directory.\n\n![Sample Image Caption](sample-image.jpg)\n\nImages are loaded with Lazy Loading, so you can secure fast document loading speed.\n\n> ⚠ The extension of the file must be set to lowercase.\n\n## 4. Tagging\n\n![](tag-example.jpg)\n\nYou can classify and search documents by tag set in Frontmatter. All tags you set can be viewed and searched in `https://siteUrl/tags`.\n\n## 5. Series\n\n![](series-example.jpg)\n\nYou can publish multiple related documents in a series. The series set in Frontmatter is grouped together and shown at the top of the document. This can be useful for serialized documents with an order. Series documents are displayed in ascending order of creation date.\n\nThe current document is also set in a series called `Getting started your blog with gatsby-starter-hoodie`.\n"},{"excerpt":"Getting started your blog with gatsby-starter-hoodie by following steps below. It's very easy 😉. 1. Create a Gatsby site Make sure you have node.js and gatsby-cli installed on your computer. 2. Start…","fields":{"slug":"/quick-start/"},"frontmatter":{"date":"May 02, 2021","title":"🚀 2. Quick Start","tags":["hoodie","quick-start"]},"rawMarkdownBody":"\nGetting started your blog with gatsby-starter-hoodie by following steps below. It's very easy 😉.\n\n## 1. Create a Gatsby site\n\n> Make sure you have **node.js** and **gatsby-cli** installed on your computer.\n\n```\n$ npx gatsby new my-hoodie-blog https://github.com/devHudi/gatsby-starter-hoodie\n```\n\n## 2. Start dev server\n\n```\n$ cd my-hoodie-blog\n$ npm run start\n```\n\nNow you can access to your blog at localhost:8000.\n\n## 3. Create your own Github repository\n\nUtterance comment widget is based on **Github issue system**. So you need your own GitHub repository. Also, if you want to publish your blog through Github Pages or Netlify, the Github Repository is a necessary.\n\nIf you don't know how to create a GitHub repository, follow the [official GitHub documentation](https://docs.github.com/en/github/getting-started-with-github/create-a-repo).\n\n### Add remote repository\n\n```\n$ git init\n$ git remote add origin https://github.com/{YOUR_GITHUB_NAME}/{YOUR_REPOSITORY_NAME}\n```\n\n## 4. Write blog-config.js\n\n```javascript\nmodule.exports = {\n  title: \"MY BLOG\",\n  description: \"Hello, This is my blog\",\n  author: \"YOUR NAME\",\n  siteUrl: \"https://myblog.com\",\n  links: {\n    github: \"https://github.com\",\n    facebook: \"https://www.facebook.com\",\n    instagram: \"https://www.instagram.com\",\n    etc: \"https://www.google.com/\",\n  },\n  utterances: {\n    repo: \"{YOUR_GITHUB_NAME}/{YOUR_REPOSITORY_NAME}\",\n    type: \"pathname\",\n  },\n}\n```\n\ngatsby-starter-hoodie provides a configuration file called `blog-config.js`. In this file, you can configure blog, biography (profile), and utterance. The website settings you are currently viewing are as above.\n\nConfigure `blog-config.js` to suit your blog. However, it is recommended not to modify `utterances.type`.\n\n### Change profile image\n\nReplace `static/profile.png` with the image you want. To change the image file name, you need to change the source code of `src/components/Bio.jsx`.\n\n## 5. Add your content\n\nMarkdown content is in `contents/posts`. You can write and add your articles like the sample posts here. [Click here](/writing-guide) to see the detail writing guide.\n\n## 6. Deploy your blog\n\n### 6-1 via Netlify\n\nFollow the Connecting to Netlify steps in [A Step-by-Step Guide: Gatsby on Netlify](https://www.netlify.com/blog/2016/02/24/a-step-by-step-guide-gatsby-on-netlify/). It's not difficult.\n\nIf you connect the github repository using Netlify, it is automatically distributed whenever you push it, so it is convenient.\n\n### 6-2. via Github Pages\n\n#### Case 1\n\nIf the repository name is in the form of `{YOUR_GITHUB_NAME} .github.io`, run it below.\n\n```\n$ npm run deploy-gh\n```\n\n#### Case 2\n\nIf the repository name is not in the form of `{YOUR_GITHUB_NAME} .github.io`, run it below.\n\n```\n$ npm run deploy-gh-prefix-paths\n```\n\nIn the above case, you need to change `pathPrefix` in `gatsby-config.js` to your repository name.\n\n### 6-3. other platforms\n\n```\n$ npm run build\n```\n\nYou can build the gatsby website with the command above. The build output is created in the `/public` directory. Deploy the `/public` directory using the command for the platform you want to deploy.\n\n## 7. Cutomize\n\n### Project Structure\n\nYou can customize your own gatsby-starter-hoodie by referring to the following file structure 🙊.\n\n```\n├── node_modules\n├── contents\n│   └── posts // your articles are here\n├── public // build outputs are here\n└── src\n    ├── assets\n    │   └── theme // theme config is here\n    ├── components\n    │   └── Article\n    │       └── Body\n    │           └── StyledMarkdown\n    │               └── index.jsx // markdown styles are here\n    │   ...\n    ├── fonts // webfonts are here\n    ├── hooks\n    ├── images\n    ├── pages // page components are here\n    ├── reducers\n    ├── templates // post components are here\n    └── utils\n```\n"},{"excerpt":"About gatsby-starter-hoodie gatsby-starter-hoodie is a gatsby theme created for writing tech blogs. Markdown, Code Highlighting in various programming languages, and Katex syntax are supported. Also,…","fields":{"slug":"/about-hoodie/"},"frontmatter":{"date":"May 01, 2021","title":"🎇 1. About gatsby-starter-hoodie","tags":["hoodie","about"]},"rawMarkdownBody":"\n## About gatsby-starter-hoodie\n\ngatsby-starter-hoodie is a gatsby theme created for writing tech blogs. Markdown, Code Highlighting in various programming languages, and Katex syntax are supported. Also, you can easily categorize articles into tags and series.\n\nStart your blog with a neatly designed gatsby-starter-hoodie that supports dark mode.\n\n## Features\n\n- Markdown\n- Code Highlighting\n- Katex Syntax\n- Dark Mode (Responsive to the settings of the OS)\n- Tag Categoriazation\n- Series Categorization\n- Responsive Web\n- SEO\n- Utterance (Comment widget)\n\n## Let's get started\n\nFollow the [Quick Start](/quick-start)\n"},{"excerpt":"파비콘은 어떻게 변경하나요?  에 파비콘 파일이 위치해 있습니다. 이미지 파일을 대체하면 파비콘을 변경할 수 있습니다. 만약 파비콘 파일의 이름을 변경하고 싶다면,  파일의  에서  속성을 변경하셔야합니다. Utterance 가 제대로 작동하지 않아요. http 환경에서는 Utterance 가 제대로 작동하지 않을 수 있습니다. 여러분의 웹사이트를 htt…","fields":{"slug":"/other-tips-kr/"},"frontmatter":{"date":"April 04, 2021","title":"🤩 4. 그 외 팁들","tags":["hoodie","other-tips"]},"rawMarkdownBody":"\n## 파비콘은 어떻게 변경하나요?\n\n`static/favicon.png` 에 파비콘 파일이 위치해 있습니다. 이미지 파일을 대체하면 파비콘을 변경할 수 있습니다.\n\n만약 파비콘 파일의 이름을 변경하고 싶다면, `gatsby-config.js` 파일의 `gatsby-plugin-manifest` 에서 `icon` 속성을 변경하셔야합니다.\n\n## Utterance 가 제대로 작동하지 않아요.\n\nhttp 환경에서는 Utterance 가 제대로 작동하지 않을 수 있습니다. 여러분의 웹사이트를 https 환경으로 제공하세요.\n\n## OG Image 를 설정하고 싶어요.\n\n`/static` 디렉토리의 `og-image.png` 파일을 여러분이 원하는 이미지 파일로 대체하세요.\n\n## 다른 질문이 있으신가요?\n\n이 문서에 댓글을 달거나 gatsby-starter-hoodie 레포지토리에 [이슈를 열어주세요](https://github.com/devHudi/gatsby-starter-hoodie/issues). 여러분의 참여가 gatsby-starter-hoodie 를 더욱 발전시킵니다. 감사해요 😎.\n"},{"excerpt":"1. 포스트 추가하기  경로에 새로운 마크다운 파일을 생성하여 여러분의 글을 추가할 수 있습니다. 1-1. 포스트 파일 구조 새로운 문서를 추가하는 방법에는 두가지가 있습니다. 첫번째는 디렉토리 없이 문서를 생성하는 방법입니다. 만약 여러분이 Javascript 에 관한 문서를 생성한다면,  파일을  디렉토리에 추가할 수 있습니다. 두번째 방법은 먼저 디…","fields":{"slug":"/writing-guide-kr/"},"frontmatter":{"date":"April 03, 2021","title":"🤔 3. 작성 가이드","tags":["hoodie","writing-guide"]},"rawMarkdownBody":"\n## 1. 포스트 추가하기\n\n`contents/post` 경로에 새로운 마크다운 파일을 생성하여 여러분의 글을 추가할 수 있습니다.\n\n### 1-1. 포스트 파일 구조\n\n새로운 문서를 추가하는 방법에는 두가지가 있습니다. 첫번째는 디렉토리 없이 문서를 생성하는 방법입니다. 만약 여러분이 Javascript 에 관한 문서를 생성한다면, `about-javascript.md` 파일을 `contents/posts` 디렉토리에 추가할 수 있습니다.\n\n두번째 방법은 먼저 디렉토리를 생성한 뒤, 디렉토리 안에 `index.md` 파일을 추가하는 것 입니다. 이 방법은 문서 내에 여러 이미지 파일 등 부수적인 파일 여러개가 포함되었을 때 유용합니다.\n\n첫번째 방법으로 생성한 파일명이나, 두번째 방법으로 생성한 디렉토리 이름은 웹사이트에서 고유의 주소를 갖습니다. `https://siteURL/about-javascript` 와 같이요.\n\n### 1-2. Frontmatter\n\n마크다운은 문서의 메타데이터인 Frontmatter 라 불리는 정보를 가지고 있습니다.\n\n```\n---\ntitle: \"🤔 3. 작성 가이드\"\ndescription: \"어떻게 글을 작성하고 추가할까요?\"\ndate: 2021-04-03\nupdate: 2021-04-03\ntags:\n  - hoodie\n  - writing-guide\nseries: \"gatsby-starter-hoodie 로 블로그 시작하기\"\n---\n```\n\n위는 지금 여러분이 읽고 있는 문서의 Frontmatter 입니다. `title` 과 `date` 는 필수 값입니다. 띄어쓰기를 포함된 문자열을 입력할 때에는 따옴표로 감싸는 것을 추천합니다.\n\n### 1-3. 마크다운 작성하기\n\n만약 Frontmatter 까지 작성했다면, 여러분은 그 아래에 마크다운 문서를 작성하면 됩니다. gatsby-starter-hoodie 는 대부분의 마크다운 문법을 지원합니다. 마크다운 작성 방법을 알고 싶다면, Github 의 [Mastering Markdown](https://guides.github.com/features/mastering-markdown/) 문서를 참고하세요.\n\n## 2. 코드 하이라이팅 & Katex\n\n### 2-1. 코드 하이라이팅\n\nPrism.JS 에 기반한 코드 하이라이팅이 제공됩니다.\n\n#### 예시\n\nJavascript\n\n```javascript\nconsole.log(\"Hello, world!\")\n```\n\nPython\n\n```python\nprint(\"Hello, world!\")\n```\n\n그 외 더 많은 언어를 제공합니다. 제공되는 언어를 확인하고 싶다면, [Prism.js 웹사이트](https://prismjs.com/) 를 참고하세요.\n\n### 2-2. Katex\n\nKatex 문법을 지원하여 복잡한 수식도 쉽게 표현할 수 있습니다.\n\n#### 인라인 모드\n\n$$E = m c^{2}$$\n\n#### 블럭 모드\n\n$$\n\\int_{0}^{\\infty} f(x) dx\n$$\n\n## 3. 글에 이미지 추가하기\n\n상대경로를 이용하여 쉽게 이미지를 추가할 수 있습니다. 디렉토리를 생성하고 그 안에 `index.md` 를 추가하여, 글을 추가하는 방법으로 작성해야 이미지 관리가 쉽습니다.\n\n![샘플 이미지 캡션](sample-image.jpg)\n\n이미지는 Lazy Loading 으로 로드되어, 빠른 초기 문서 로딩 속도를 확보할 수 있습니다.\n\n> ⚠ 이미지의 모든 확장자는 소문자여야합니다.\n\n## 4. 태그\n\n![](tag-example.jpg)\n\nFrontmatter 의 태그를 통해 쉽게 문서를 분류하고 검색할 수 있습니다. 여러분의 모든 태그는 `https://siteUrl/tags` 경로에서 확인하고, 검색할 수 있습니다.\n\n## 5. 시리즈\n\n![](series-example.jpg)\n\n여러분이 연관된 여러개의 문서를 작성할 때 시리즈를 사용할 수 있습니다. Frontmatter 에 작성된 시리즈가 같은 문서끼리 묶여 문서 상단에 리스트로 표시됩니다. 시리즈는 일련의 순서가 있는 문서들을 작성할 때 유용하게 사용할 수 있습니다. 시리즈는 문서의 작성 날짜 순서대로 정렬됩니다.\n\n현재 문서는 `gatsby-starter-hoodie 로 블로그 시작하기` 라는 시리즈로 설정되어 있습니다.\n"},{"excerpt":"아래 단계를 따라서 여러분의 블로그를 시작하세요. 굉장히 쉬워요 😉. 1. Gatsby 사이트 생성 컴퓨터에 node.js 와 gatsby-cli 가 설치되어 있어야합니다. 2. 개발 서버 시작 이제 localhost:8000 으로 여러분의 블로그를 접속할 수 있습니다. 3. Github 레포지토리 생성 Utterance 댓글 위젯은 Github 이슈 시…","fields":{"slug":"/quick-start-kr/"},"frontmatter":{"date":"April 02, 2021","title":"🚀 2. 빠르게 시작하기","tags":["hoodie","quick-start"]},"rawMarkdownBody":"\n아래 단계를 따라서 여러분의 블로그를 시작하세요. 굉장히 쉬워요 😉.\n\n## 1. Gatsby 사이트 생성\n\n> 컴퓨터에 **node.js** 와 **gatsby-cli** 가 설치되어 있어야합니다.\n\n```\n$ npx gatsby new my-hoodie-blog https://github.com/devHudi/gatsby-starter-hoodie\n```\n\n## 2. 개발 서버 시작\n\n```\n$ cd my-hoodie-blog\n$ npm run start\n```\n\n이제 localhost:8000 으로 여러분의 블로그를 접속할 수 있습니다.\n\n## 3. Github 레포지토리 생성\n\nUtterance 댓글 위젯은 **Github 이슈 시스템** 기반입니다. 따라서 각 블로그 별 Github 레포지토리가 필요합니다. 또한 여러분이 Github Pages 혹은 Netlify 로 블로그를 배포하길 원한다면, Github 레포지토리는 필수입니다.\n\n만약 Github 레포지토리를 생성하는 법을 모른다면, [Github 공식 문서](https://docs.github.com/en/github/getting-started-with-github/create-a-repo) 를 참조하세요.\n\n### 원격 레포지토리 등록\n\n```\ngit remote add origin https://github.com/{YOUR_GITHUB_NAME}/{YOUR_REPOSITORY_NAME}\n```\n\n## 4. blog-config.js 작성\n\n```javascript\nmodule.exports = {\n  title: \"MY BLOG\",\n  description: \"Hello, This is my blog\",\n  author: \"YOUR NAME\",\n  siteUrl: \"https://myblog.com\",\n  links: {\n    github: \"https://github.com\",\n    facebook: \"https://www.facebook.com\",\n    instagram: \"https://www.instagram.com\",\n    etc: \"https://www.google.com/\",\n  },\n  utterances: {\n    repo: \"{YOUR_GITHUB_NAME}/{YOUR_REPOSITORY_NAME}\",\n    type: \"pathname\",\n  },\n}\n```\n\ngatsby-starter-hoodie 는 `blog-config.js` 라는 설정 파일을 제공합니다. 이 파일에서 블로그 정보, 작성자 프로필, Utterance 설정 등을 작성할 수 있습니다. 여러분 블로그 설정에 맞게 `blog-config.js` 를 설정하세요. 하지만, `utterances.type` 속성은 수정하지 않는 것을 권장합니다.\n\n### 프로필 이미지 변경\n\n`static/profile.png` 에 위치한 이미지 파일을 원하는 이미지 파일로 교체하세요. 만약 파일명을 변경하고 싶다면, `src/components/Bio.jsx` 의 소스코드를 수정해야합니다.\n\n## 5. 포스트 추가\n\n마크다운 포스트는 `contents/posts` 경로에 위치해있습니다. 해당 경로에서 글을 작성할 수 있습니다. [여기를 클릭하여](https://devHudi.github.io/gatsby-starter-hoodie/writing-guide) 더 자세한 글 작성 방법을 확인하세요.\n\n## 6. 블로그 배포하기\n\n### 6-1 Netlify 를 통해\n\n[A Step-by-Step Guide: Gatsby on Netlify](https://www.netlify.com/blog/2016/02/24/a-step-by-step-guide-gatsby-on-netlify/) 문서를 참조하여, Netlify 를 Github 레포지토리와 연결할 수 있습니다. 이 과정은 어렵지 않습니다.\n\nGithub 레포지토리와 연결이 되었다면, Github 레포지토리에 변경사항이 발생할 때 마다 자동으로 여러분의 블로그에 배포됩니다.\n\n### 6-2. Github Pages 를 통해\n\n#### 상황 1\n\n레포지토리 이름이 `{YOUR_GITHUB_NAME}.github.io` 형태일 경우, 아래 명령어를 실행해주세요.\n\n```\n$ npm run deploy-gh\n```\n\n#### 상황 2\n\n레포지토리 이름이 `{YOUR_GITHUB_NAME}.github.io` 형태가 아닐 경우, 아래 명령어를 실행해주세요.\n\n```\n$ npm run deploy-gh-prefix-paths\n```\n\n만약 위와 같은 경우 `gatsby-config.js` 에서 `pathPrefix` 를 여러분의 레포지토리 이름으로 바꿔야합니다.\n\n### 6-3. 다른 플랫폼\n\n```\n$ npm run build\n```\n\n위 명령어로 Gastby 웹사이트를 빌드할 수 있습니다. 빌드 결과물은 `/public` 에 저장됩니다. `/public` 디렉토리를 여러분이 사용하는 플랫폼의 배포 명령을 통해 배포해주세요.\n\n## 7. 커스터마이징\n\n### 프로젝트 구조\n\n아래 프로젝트 구조를 참고하여 커스터마이징 할 수 있습니다 🙊.\n\n```\n├── node_modules\n├── contents\n│   └── posts // your articles are here\n├── public // build outputs are here\n└── src\n    ├── assets\n    │   └── theme // theme config is here\n    ├── components\n    │   └── Article\n    │       └── Body\n    │           └── StyledMarkdown\n    │               └── index.jsx // markdown styles are here\n    │   ...\n    ├── fonts // webfonts are here\n    ├── hooks\n    ├── images\n    ├── pages // page components are here\n    ├── reducers\n    ├── templates // post components are here\n    └── utils\n```\n"},{"excerpt":"gatsby-starter-hoodie 에 대하여 gatsby-starter-hoodie 는 기술 블로그를 작성하기 위해 개발된 Gatsby 테마입니다. 마크다운과 많은 프로그래밍 언어의 코드 하이라이팅, 그리고 Katex 문법을 지원합니다. 또한 태그와 시리즈를 통하여 쉽게 게시물을 분류할 수 있습니다. 다크모드를 지원하는 깔끔한 디자인의 gatsby-…","fields":{"slug":"/about-hoodie-kr/"},"frontmatter":{"date":"April 01, 2021","title":"🎇 1. gatsby-starter-hoodie 에 대하여","tags":["hoodie","about"]},"rawMarkdownBody":"\n## gatsby-starter-hoodie 에 대하여\n\ngatsby-starter-hoodie 는 기술 블로그를 작성하기 위해 개발된 Gatsby 테마입니다. 마크다운과 많은 프로그래밍 언어의 코드 하이라이팅, 그리고 Katex 문법을 지원합니다. 또한 태그와 시리즈를 통하여 쉽게 게시물을 분류할 수 있습니다.\n\n다크모드를 지원하는 깔끔한 디자인의 gatsby-starter-hoodie 로 여러분의 블로그를 시작하세요.\n\n## 주요 기능\n\n- 마크다운\n- 코드 하이라이팅\n- Katex 문법\n- 다크모드 (OS 환경설정과 연동)\n- 태그 분류\n- 시리즈 분류\n- 반응형 웹\n- SEO\n- Utterance (댓글 위젯)\n\n## 시작\n\n[빠르게 시작하기](/quick-start-kr) 문서에서 블로그를 세팅하세요.\n"}]}},"pageContext":{}},"staticQueryHashes":[]}